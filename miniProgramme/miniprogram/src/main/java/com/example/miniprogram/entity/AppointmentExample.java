package com.example.miniprogram.entity;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class AppointmentExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table appointment
     *
     * @mbg.generated Sat May 16 16:38:35 CST 2020
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table appointment
     *
     * @mbg.generated Sat May 16 16:38:35 CST 2020
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table appointment
     *
     * @mbg.generated Sat May 16 16:38:35 CST 2020
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table appointment
     *
     * @mbg.generated Sat May 16 16:38:35 CST 2020
     */
    public AppointmentExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table appointment
     *
     * @mbg.generated Sat May 16 16:38:35 CST 2020
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table appointment
     *
     * @mbg.generated Sat May 16 16:38:35 CST 2020
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table appointment
     *
     * @mbg.generated Sat May 16 16:38:35 CST 2020
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table appointment
     *
     * @mbg.generated Sat May 16 16:38:35 CST 2020
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table appointment
     *
     * @mbg.generated Sat May 16 16:38:35 CST 2020
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table appointment
     *
     * @mbg.generated Sat May 16 16:38:35 CST 2020
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table appointment
     *
     * @mbg.generated Sat May 16 16:38:35 CST 2020
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table appointment
     *
     * @mbg.generated Sat May 16 16:38:35 CST 2020
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table appointment
     *
     * @mbg.generated Sat May 16 16:38:35 CST 2020
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table appointment
     *
     * @mbg.generated Sat May 16 16:38:35 CST 2020
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table appointment
     *
     * @mbg.generated Sat May 16 16:38:35 CST 2020
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andAppointmentIdIsNull() {
            addCriterion("appointment_id is null");
            return (Criteria) this;
        }

        public Criteria andAppointmentIdIsNotNull() {
            addCriterion("appointment_id is not null");
            return (Criteria) this;
        }

        public Criteria andAppointmentIdEqualTo(Long value) {
            addCriterion("appointment_id =", value, "appointmentId");
            return (Criteria) this;
        }

        public Criteria andAppointmentIdNotEqualTo(Long value) {
            addCriterion("appointment_id <>", value, "appointmentId");
            return (Criteria) this;
        }

        public Criteria andAppointmentIdGreaterThan(Long value) {
            addCriterion("appointment_id >", value, "appointmentId");
            return (Criteria) this;
        }

        public Criteria andAppointmentIdGreaterThanOrEqualTo(Long value) {
            addCriterion("appointment_id >=", value, "appointmentId");
            return (Criteria) this;
        }

        public Criteria andAppointmentIdLessThan(Long value) {
            addCriterion("appointment_id <", value, "appointmentId");
            return (Criteria) this;
        }

        public Criteria andAppointmentIdLessThanOrEqualTo(Long value) {
            addCriterion("appointment_id <=", value, "appointmentId");
            return (Criteria) this;
        }

        public Criteria andAppointmentIdIn(List<Long> values) {
            addCriterion("appointment_id in", values, "appointmentId");
            return (Criteria) this;
        }

        public Criteria andAppointmentIdNotIn(List<Long> values) {
            addCriterion("appointment_id not in", values, "appointmentId");
            return (Criteria) this;
        }

        public Criteria andAppointmentIdBetween(Long value1, Long value2) {
            addCriterion("appointment_id between", value1, value2, "appointmentId");
            return (Criteria) this;
        }

        public Criteria andAppointmentIdNotBetween(Long value1, Long value2) {
            addCriterion("appointment_id not between", value1, value2, "appointmentId");
            return (Criteria) this;
        }

        public Criteria andAppointmentUserid1IsNull() {
            addCriterion("appointment_userid1 is null");
            return (Criteria) this;
        }

        public Criteria andAppointmentUserid1IsNotNull() {
            addCriterion("appointment_userid1 is not null");
            return (Criteria) this;
        }

        public Criteria andAppointmentUserid1EqualTo(Long value) {
            addCriterion("appointment_userid1 =", value, "appointmentUserid1");
            return (Criteria) this;
        }

        public Criteria andAppointmentUserid1NotEqualTo(Long value) {
            addCriterion("appointment_userid1 <>", value, "appointmentUserid1");
            return (Criteria) this;
        }

        public Criteria andAppointmentUserid1GreaterThan(Long value) {
            addCriterion("appointment_userid1 >", value, "appointmentUserid1");
            return (Criteria) this;
        }

        public Criteria andAppointmentUserid1GreaterThanOrEqualTo(Long value) {
            addCriterion("appointment_userid1 >=", value, "appointmentUserid1");
            return (Criteria) this;
        }

        public Criteria andAppointmentUserid1LessThan(Long value) {
            addCriterion("appointment_userid1 <", value, "appointmentUserid1");
            return (Criteria) this;
        }

        public Criteria andAppointmentUserid1LessThanOrEqualTo(Long value) {
            addCriterion("appointment_userid1 <=", value, "appointmentUserid1");
            return (Criteria) this;
        }

        public Criteria andAppointmentUserid1In(List<Long> values) {
            addCriterion("appointment_userid1 in", values, "appointmentUserid1");
            return (Criteria) this;
        }

        public Criteria andAppointmentUserid1NotIn(List<Long> values) {
            addCriterion("appointment_userid1 not in", values, "appointmentUserid1");
            return (Criteria) this;
        }

        public Criteria andAppointmentUserid1Between(Long value1, Long value2) {
            addCriterion("appointment_userid1 between", value1, value2, "appointmentUserid1");
            return (Criteria) this;
        }

        public Criteria andAppointmentUserid1NotBetween(Long value1, Long value2) {
            addCriterion("appointment_userid1 not between", value1, value2, "appointmentUserid1");
            return (Criteria) this;
        }

        public Criteria andAppointmentUserid2IsNull() {
            addCriterion("appointment_userid2 is null");
            return (Criteria) this;
        }

        public Criteria andAppointmentUserid2IsNotNull() {
            addCriterion("appointment_userid2 is not null");
            return (Criteria) this;
        }

        public Criteria andAppointmentUserid2EqualTo(Long value) {
            addCriterion("appointment_userid2 =", value, "appointmentUserid2");
            return (Criteria) this;
        }

        public Criteria andAppointmentUserid2NotEqualTo(Long value) {
            addCriterion("appointment_userid2 <>", value, "appointmentUserid2");
            return (Criteria) this;
        }

        public Criteria andAppointmentUserid2GreaterThan(Long value) {
            addCriterion("appointment_userid2 >", value, "appointmentUserid2");
            return (Criteria) this;
        }

        public Criteria andAppointmentUserid2GreaterThanOrEqualTo(Long value) {
            addCriterion("appointment_userid2 >=", value, "appointmentUserid2");
            return (Criteria) this;
        }

        public Criteria andAppointmentUserid2LessThan(Long value) {
            addCriterion("appointment_userid2 <", value, "appointmentUserid2");
            return (Criteria) this;
        }

        public Criteria andAppointmentUserid2LessThanOrEqualTo(Long value) {
            addCriterion("appointment_userid2 <=", value, "appointmentUserid2");
            return (Criteria) this;
        }

        public Criteria andAppointmentUserid2In(List<Long> values) {
            addCriterion("appointment_userid2 in", values, "appointmentUserid2");
            return (Criteria) this;
        }

        public Criteria andAppointmentUserid2NotIn(List<Long> values) {
            addCriterion("appointment_userid2 not in", values, "appointmentUserid2");
            return (Criteria) this;
        }

        public Criteria andAppointmentUserid2Between(Long value1, Long value2) {
            addCriterion("appointment_userid2 between", value1, value2, "appointmentUserid2");
            return (Criteria) this;
        }

        public Criteria andAppointmentUserid2NotBetween(Long value1, Long value2) {
            addCriterion("appointment_userid2 not between", value1, value2, "appointmentUserid2");
            return (Criteria) this;
        }

        public Criteria andAppointmentTimeIsNull() {
            addCriterion("appointment_time is null");
            return (Criteria) this;
        }

        public Criteria andAppointmentTimeIsNotNull() {
            addCriterion("appointment_time is not null");
            return (Criteria) this;
        }

        public Criteria andAppointmentTimeEqualTo(Date value) {
            addCriterion("appointment_time =", value, "appointmentTime");
            return (Criteria) this;
        }

        public Criteria andAppointmentTimeNotEqualTo(Date value) {
            addCriterion("appointment_time <>", value, "appointmentTime");
            return (Criteria) this;
        }

        public Criteria andAppointmentTimeGreaterThan(Date value) {
            addCriterion("appointment_time >", value, "appointmentTime");
            return (Criteria) this;
        }

        public Criteria andAppointmentTimeGreaterThanOrEqualTo(Date value) {
            addCriterion("appointment_time >=", value, "appointmentTime");
            return (Criteria) this;
        }

        public Criteria andAppointmentTimeLessThan(Date value) {
            addCriterion("appointment_time <", value, "appointmentTime");
            return (Criteria) this;
        }

        public Criteria andAppointmentTimeLessThanOrEqualTo(Date value) {
            addCriterion("appointment_time <=", value, "appointmentTime");
            return (Criteria) this;
        }

        public Criteria andAppointmentTimeIn(List<Date> values) {
            addCriterion("appointment_time in", values, "appointmentTime");
            return (Criteria) this;
        }

        public Criteria andAppointmentTimeNotIn(List<Date> values) {
            addCriterion("appointment_time not in", values, "appointmentTime");
            return (Criteria) this;
        }

        public Criteria andAppointmentTimeBetween(Date value1, Date value2) {
            addCriterion("appointment_time between", value1, value2, "appointmentTime");
            return (Criteria) this;
        }

        public Criteria andAppointmentTimeNotBetween(Date value1, Date value2) {
            addCriterion("appointment_time not between", value1, value2, "appointmentTime");
            return (Criteria) this;
        }

        public Criteria andAppointmentAgreeIsNull() {
            addCriterion("appointment_agree is null");
            return (Criteria) this;
        }

        public Criteria andAppointmentAgreeIsNotNull() {
            addCriterion("appointment_agree is not null");
            return (Criteria) this;
        }

        public Criteria andAppointmentAgreeEqualTo(Integer value) {
            addCriterion("appointment_agree =", value, "appointmentAgree");
            return (Criteria) this;
        }

        public Criteria andAppointmentAgreeNotEqualTo(Integer value) {
            addCriterion("appointment_agree <>", value, "appointmentAgree");
            return (Criteria) this;
        }

        public Criteria andAppointmentAgreeGreaterThan(Integer value) {
            addCriterion("appointment_agree >", value, "appointmentAgree");
            return (Criteria) this;
        }

        public Criteria andAppointmentAgreeGreaterThanOrEqualTo(Integer value) {
            addCriterion("appointment_agree >=", value, "appointmentAgree");
            return (Criteria) this;
        }

        public Criteria andAppointmentAgreeLessThan(Integer value) {
            addCriterion("appointment_agree <", value, "appointmentAgree");
            return (Criteria) this;
        }

        public Criteria andAppointmentAgreeLessThanOrEqualTo(Integer value) {
            addCriterion("appointment_agree <=", value, "appointmentAgree");
            return (Criteria) this;
        }

        public Criteria andAppointmentAgreeIn(List<Integer> values) {
            addCriterion("appointment_agree in", values, "appointmentAgree");
            return (Criteria) this;
        }

        public Criteria andAppointmentAgreeNotIn(List<Integer> values) {
            addCriterion("appointment_agree not in", values, "appointmentAgree");
            return (Criteria) this;
        }

        public Criteria andAppointmentAgreeBetween(Integer value1, Integer value2) {
            addCriterion("appointment_agree between", value1, value2, "appointmentAgree");
            return (Criteria) this;
        }

        public Criteria andAppointmentAgreeNotBetween(Integer value1, Integer value2) {
            addCriterion("appointment_agree not between", value1, value2, "appointmentAgree");
            return (Criteria) this;
        }

        public Criteria andAppointmentReasonIsNull() {
            addCriterion("appointment_reason is null");
            return (Criteria) this;
        }

        public Criteria andAppointmentReasonIsNotNull() {
            addCriterion("appointment_reason is not null");
            return (Criteria) this;
        }

        public Criteria andAppointmentReasonEqualTo(String value) {
            addCriterion("appointment_reason =", value, "appointmentReason");
            return (Criteria) this;
        }

        public Criteria andAppointmentReasonNotEqualTo(String value) {
            addCriterion("appointment_reason <>", value, "appointmentReason");
            return (Criteria) this;
        }

        public Criteria andAppointmentReasonGreaterThan(String value) {
            addCriterion("appointment_reason >", value, "appointmentReason");
            return (Criteria) this;
        }

        public Criteria andAppointmentReasonGreaterThanOrEqualTo(String value) {
            addCriterion("appointment_reason >=", value, "appointmentReason");
            return (Criteria) this;
        }

        public Criteria andAppointmentReasonLessThan(String value) {
            addCriterion("appointment_reason <", value, "appointmentReason");
            return (Criteria) this;
        }

        public Criteria andAppointmentReasonLessThanOrEqualTo(String value) {
            addCriterion("appointment_reason <=", value, "appointmentReason");
            return (Criteria) this;
        }

        public Criteria andAppointmentReasonLike(String value) {
            addCriterion("appointment_reason like", value, "appointmentReason");
            return (Criteria) this;
        }

        public Criteria andAppointmentReasonNotLike(String value) {
            addCriterion("appointment_reason not like", value, "appointmentReason");
            return (Criteria) this;
        }

        public Criteria andAppointmentReasonIn(List<String> values) {
            addCriterion("appointment_reason in", values, "appointmentReason");
            return (Criteria) this;
        }

        public Criteria andAppointmentReasonNotIn(List<String> values) {
            addCriterion("appointment_reason not in", values, "appointmentReason");
            return (Criteria) this;
        }

        public Criteria andAppointmentReasonBetween(String value1, String value2) {
            addCriterion("appointment_reason between", value1, value2, "appointmentReason");
            return (Criteria) this;
        }

        public Criteria andAppointmentReasonNotBetween(String value1, String value2) {
            addCriterion("appointment_reason not between", value1, value2, "appointmentReason");
            return (Criteria) this;
        }

        public Criteria andAppointmentFromidIsNull() {
            addCriterion("appointment_fromId is null");
            return (Criteria) this;
        }

        public Criteria andAppointmentFromidIsNotNull() {
            addCriterion("appointment_fromId is not null");
            return (Criteria) this;
        }

        public Criteria andAppointmentFromidEqualTo(Long value) {
            addCriterion("appointment_fromId =", value, "appointmentFromid");
            return (Criteria) this;
        }

        public Criteria andAppointmentFromidNotEqualTo(Long value) {
            addCriterion("appointment_fromId <>", value, "appointmentFromid");
            return (Criteria) this;
        }

        public Criteria andAppointmentFromidGreaterThan(Long value) {
            addCriterion("appointment_fromId >", value, "appointmentFromid");
            return (Criteria) this;
        }

        public Criteria andAppointmentFromidGreaterThanOrEqualTo(Long value) {
            addCriterion("appointment_fromId >=", value, "appointmentFromid");
            return (Criteria) this;
        }

        public Criteria andAppointmentFromidLessThan(Long value) {
            addCriterion("appointment_fromId <", value, "appointmentFromid");
            return (Criteria) this;
        }

        public Criteria andAppointmentFromidLessThanOrEqualTo(Long value) {
            addCriterion("appointment_fromId <=", value, "appointmentFromid");
            return (Criteria) this;
        }

        public Criteria andAppointmentFromidIn(List<Long> values) {
            addCriterion("appointment_fromId in", values, "appointmentFromid");
            return (Criteria) this;
        }

        public Criteria andAppointmentFromidNotIn(List<Long> values) {
            addCriterion("appointment_fromId not in", values, "appointmentFromid");
            return (Criteria) this;
        }

        public Criteria andAppointmentFromidBetween(Long value1, Long value2) {
            addCriterion("appointment_fromId between", value1, value2, "appointmentFromid");
            return (Criteria) this;
        }

        public Criteria andAppointmentFromidNotBetween(Long value1, Long value2) {
            addCriterion("appointment_fromId not between", value1, value2, "appointmentFromid");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table appointment
     *
     * @mbg.generated do_not_delete_during_merge Sat May 16 16:38:35 CST 2020
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table appointment
     *
     * @mbg.generated Sat May 16 16:38:35 CST 2020
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}